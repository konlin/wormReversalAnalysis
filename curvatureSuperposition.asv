%superimposes all of the curvatures on top of each other
%Konlin Shen
%6/4/13

function [segArrays,curvatures,peaknumbers,curvatureCell]=curvatureSuperposition(cra)
craSize=length(cra);
segArrays=NaN(5,craSize);
curvatures=[];
curvatureCell={};
peaknumbers=[];

figure;
hold all;

for i=1:craSize
    frame=cra(i).WormVid(1);
    curvature=generateCurvature(frame);
    
    plotFlag=true;
    
    %if the head curvature is negative, flip it for normalization
    if((curvature(5)-curvature(10))/(5-10)<0)
        curvature=-1*curvature;
    end
    
    for j=1:5
        %calculate average curvature for each segment
        segMax=max(abs(curvature((j-1)*10+1:j*20)));
        
        %filter out curvatures which make no sense
        if(segMax<2*pi)
            %collect the average curvatures
            seg=mean(curvature((j-1)*10+1:j*20));
            segArrays(j,i)=seg;
        else
            %if the curvature is unreasonable, make the entire curvature
            %NaN
            segArrays(:,i)=NaN;
            plotFlag=false;
            break;
        end
    end
    
    if(plotFlag==true)
        temppeak=findpeaks(abs(curvature));
        numpeaks=numel(temppeak);
        peaknumbers=[peaknumbers,numpeaks];
        curvatures=[curvatures; curvature'];
        
        if(numel(curvatureCell)<numpeaks)
            curvatureCell{numpeaks}=[];
        end
        
        curvatureCell{numpeaks}=[curvatureCell{numpeaks};curvature'];
        
        plot(curvature);
    end
end
title('Superposition of Worm Curvatures Prior to Reversing');

averageCurvature=mean(curvatures);
plot(averageCurvature,'LineWidth',4,'color','r');

%plot histograms for all the segments
%first remove the NaN columns
for col=1:craSize
figure;
for segIndex=1:5
    subplot(3,2,segIndex);
    hist(segArrays(segIndex,:),30);
    titleStr=sprintf('Histogram of Average Curvature for Segment %d',segIndex);
    title(titleStr);
end

%plot histogram for peak number
figure;
hist(peaknumbers);
title('histogram of maxes/mins');

for i=1:numel(curvatureCell)
    postureCurvatures=curvatureCell{i};
    pCurvSize=size(postureCurvatures,1);
    if(pCurvSize>0)
        figure;
        hold on;
        
        for k=1:pCurvSize
            plot(postureCurvatures(k,:));
        end

        avgPostureCurvature=mean(postureCurvatures);
        plot(avgPostureCurvature,'LineWidth',4,'Color','r');
        postureTitleStr=sprintf('%d Peak Curvature Superposition',i);
        title(postureTitleStr);
    end
end

end